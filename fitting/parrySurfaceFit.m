% function [fitresult, gof] = parrySurfaceFit( set, base )
% DODGESURFACEFIT(SET, BASE)
%  Input:
%      set : a data set structure generated by parseChatLog
%      base : structure containing base stat information
%
%  Output:
%      fitresult : an sfit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, SFIT.

%  Auto-generated by MATLAB on 13-Sep-2012 15:15:46

%% unpack data set
baseStr = base.str;
baseParry = base.parry;
bonusStr = set.str - base.str;
preParry = set.preParry;
postParry = set.postParry;
s2p = base.str2parry;
vs = base.vs;
pf = base.pf;
k = base.k;
nodrStr=0;

racestr=base.racestr;

% nondrStr = racestr;
% bonusStr = bonusStr-racestr;

bonusParry = bonusStr*s2p+preParry;


%% Fit: 'untitled fit 1'.
[xInput, yInput, zOutput] = prepareSurfaceData( bonusStr, preParry, postParry);
% xInput = bonusParry; zOutput = postParry;
% fitType=[ int2str(baseParry) '+x/(x*' num2str(pf) '*vs+' int2str(k) ')'];

% fitType=[ int2str(baseParry) '+' int2str(nodrStr) '/q+(x/q+y)/((x/q+y)*a*' num2str(pf) '+k)'];
fitType=[ int2str(baseParry) '+(' int2str(nodrStr) '+r)*' num2str(s2p) '+(x*' num2str(s2p) '+y)/((x*' num2str(s2p) '+y)*a*' num2str(pf) '+k)'];

% Set up fittype and options.
ft = fittype( fitType , 'indep', {'x', 'y'}, 'depend', 'z' );
opts = fitoptions( ft );
opts.DiffMinChange = 1e-012;
opts.Display = 'Off';
opts.Lower = [0.00664];
opts.Lower = [0.00665-0.0000001 k-0.000001 -10];
% opts.Lower = [0.00665-0.000 k-0.001 0];
opts.MaxFunEvals = 60000;
opts.MaxIter = 40000;
opts.Robust = 'Bisquare';
opts.StartPoint = [0.00665];
opts.StartPoint = [0.00665 k 0];
% opts.StartPoint = [0.00665 k 1/s2p];
opts.TolFun = 1e-012;
opts.TolX = 1e-012;
opts.Upper = [0.00666];
opts.Upper = [0.00665+0.0000001 k+0.000001 10];
% opts.Upper = [0.00665+0.001 k+0.001 1.1/s2p];

% Fit model to data.
[fitresult, gof] = fit( [xInput yInput], zOutput, ft, opts );

% Create a figure for the plots.
figure( 13 );

% Plot fit with data.
h = plot( fitresult, [xInput yInput], zOutput );
legend( h, 'fit', 'postParry vs. bonusParry', 'Location', 'NorthEast' );
% Label axes
xlabel( 'bonusStr' );
ylabel( 'preParry' );
zlabel( 'postParry' );
grid on

% Plot residuals.
figure(14)
h = plot( fitresult, [xInput yInput], zOutput, 'Style', 'Residual' );
legend( h, 'fit residuals', 'Location', 'NorthEast' );
% Label axes
xlabel( 'bonusStr' );
ylabel( 'preParry' );
zlabel( 'postParry' );
grid on
view([0 -1 0])

disp('====Surf Fit=====')

fitresult
%% 
[fitresult(xInput, yInput) zOutput fitresult(xInput,yInput)-zOutput]
 num2str(coeffvalues(fitresult)','%1.10f')

