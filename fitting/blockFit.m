function [fitresult, gof] = blockFit( set, base )
% DODGESURFACEFIT(SET, BASE)
%  Input:
%      set : a data set structure generated by parseChatLog
%      base : structure containing base stat information
%
%  Output:
%      fitresult : an sfit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, SFIT.

%  Auto-generated by MATLAB on 13-Sep-2012 15:15:46

%% unpack data set
preMastery=set.preMastery;
postBlock=set.postBlock;
mast2block=base.mast2block;

%% Fit: 'untitled fit 1'.
xInput = preMastery.*mast2block;
yInput = postBlock;

ok_ = isfinite(xInput) & isfinite(yInput);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
st_ = [150 0.956 ];
ft_ = fittype('13+1/(1/C+k/round(128*x)*128)',...
    'dependent',{'y'},'independent',{'x'},...
    'coefficients',{'C', 'k'});

% Fit this model using new data
[fitresult gof] = fit(xInput(ok_),yInput(ok_),ft_,'Startpoint',st_);
% Alternatively uncomment the following lines to use coefficients from the
% original fit. You can use this choice to plot the original fit against new
% data.
%    cv_ = { 135.62774573404502, 0.94858345279285428};
%    cf_ = cfit(ft_,cv_{:});

res_ = yInput - fitresult(xInput);

% Create a figure for the plots.
figure( 5 );

% Plot fit with data.
h = plot( fitresult, xInput, yInput );
legend( h, 'fit', 'postBlock vs. preBlock', 'Location', 'NorthWest' );
% Label axes
xlabel( 'preBlock' );
ylabel( 'postBlock' );
grid on

% Plot residuals.
figure(6)
h = plot( xInput, zeros(size(xInput)),'k-', xInput, res_, '.');
legend( h, 'fit residuals', 'Location', 'NorthEast' );
% Label axes
xlabel( 'preBlock' );
ylabel( 'postBlock' );


% % Compute and plot residuals.
% [x_,i_] = sort(preMastery);
% axes(ax2_);
% hold on;
% h_ = line(x_,res_(i_),'Parent',ax2_,'Color',[1 0 0],...
%     'LineStyle','none', 'LineWidth',1,...
%     'Marker','.', 'MarkerSize',6);
% axes(ax_);

