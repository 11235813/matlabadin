function [fitresult, gof] = parryFit( set, base )
% DODGESURFACEFIT(SET, BASE)
%  Input:
%      set : a data set structure generated by parseChatLog
%      base : structure containing base stat information
%
%  Output:
%      fitresult : an sfit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, SFIT.

%  Auto-generated by MATLAB on 13-Sep-2012 15:15:46



%% unpack data set
baseStr = base.str;
baseParry = base.parry;
bonusStr = set.str - baseStr;
preParry = set.preParry;
postParry = set.postParry;
s2p = base.str2parry;
vs = base.vs;
pf = base.pf;
hs = base.hs;
nondrStr=0;

%uncomment if race strength not affected by DR
nondrStr = base.raceStr;
bonusStr = bonusStr-nondrStr;

%construct bonusParry
bonusParry = bonusStr*s2p+preParry;
    
%% Fit: 'untitled fit 1'.
xInput = bonusParry; 
zOutput = postParry;

%fit function
fitType=[ int2str(baseParry) '+(' int2str(nondrStr) '+Q)*' num2str(s2p) '+x/(x*' num2str(pf) '*vs+hs)']; 

%bounds on HS/VS
deltaQ=10;
deltaHS=0.00001;
deltaVS=0.000001;

% Set up fittype and options.
ft = fittype( fitType , 'indep', 'x', 'depend', 'z' );
opts = fitoptions( ft );
opts.DiffMinChange = 1e-012;
opts.Display = 'Off';
opts.Lower = [ -deltaQ hs-deltaHS vs-deltaVS];
opts.MaxFunEvals = 60000;
opts.MaxIter = 40000;
opts.Robust = 'Bisquare';
opts.StartPoint = [ 0 hs vs];
opts.TolFun = 1e-012;
opts.TolX = 1e-012;
opts.Upper = [ deltaQ hs+deltaHS vs+deltaVS];

% Fit model to data.
[fitresult, gof] = fit( xInput, zOutput, ft, opts );
residuals = fitresult(xInput)-zOutput;

% Create a figure for the plots.
figure( 3 );

% Plot fit with data.
h = plot( fitresult, xInput, zOutput );
legend( h, 'fit', 'postParry vs. bonusParry', 'Location', 'Best' );
% Label axes
xlabel( 'bonusParry' );
ylabel( 'postParry' );
grid on

% Plot residuals.
figure(4)
plot( xInput, zeros(size(xInput)),'k-', xInput, residuals, 'o-' );
legend('fit residuals', 'Location', 'Best' );
% Label axes
xlabel( 'bonusParry' );
ylabel( 'fit - postParry' );
grid on

disp('==== Parry Curve Fit=====')

if sum(bonusParry==0)==length(bonusParry)
    warning('---------------No bonusParry to fit-------------------')
end
% 
% fitresult
% %% 
% [fitresult(xInput) zOutput fitresult(xInput)-zOutput]
%  num2str(coeffvalues(fitresult)','%1.10f')
end

